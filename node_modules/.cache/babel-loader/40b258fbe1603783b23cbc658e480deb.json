{"ast":null,"code":"export class UserProvider {\n  constructor() {\n    this.users = this.getUsers();\n  } //mettre a jour (save) le local storage\n\n\n  save() {\n    localStorage.setItem('spa-users', JSON.stringify(this.users));\n  } //récupérer les données du local storage\n\n\n  load() {\n    let datas = localStorage.getItem('spa-users'); //condition pour retourner un tab vide si on a 0 data\n\n    if (datas === null) datas = '[]'; //convertir les donnée\n\n    datas = JSON.parse(datas);\n    this.users = datas;\n  }\n\n  getUsers() {\n    this.load();\n    return this.users;\n  } //-----------------------------------//\n  //creer add qui permet d'envoyer les donnée du formulaire \n\n\n  add(user) {\n    //créer un id qui gener la date au moment de la creation **date**\n    const id = Date.now(); //spread\n\n    let tmp = { ...user\n    };\n    tmp.id = id; //push le user dans le local storage\n\n    this.users.push(tmp); //enregistrer dans le local grave a la fonction \n\n    this.save();\n  }\n\n  update(user) {\n    const {\n      id\n    } = user;\n    let indice = -1;\n\n    for (let i = 0; i < this.users.length; i++) if (this.users[i].id === Number(id)) indice = i;\n\n    if (indice === -1) return false;\n    this.users[indice] = user;\n    this.save();\n    return true;\n  }\n\n  remove(user) {\n    let indice = -1;\n\n    for (let i = 0; i < this.users.length; i++) if (this.users[i].id === Number(id)) indice = i;\n\n    if (indice === -1) return false;\n    this.users.splice(indice, 1);\n    this.save();\n    return true;\n  }\n\n  getUsersById(id) {\n    let res = this.users.filter(user => user.id === Number(id));\n    return res.length === 0 ? false : res[0];\n  }\n\n}","map":{"version":3,"names":["UserProvider","constructor","users","getUsers","save","localStorage","setItem","JSON","stringify","load","datas","getItem","parse","add","user","id","Date","now","tmp","push","update","indice","i","length","Number","remove","splice","getUsersById","res","filter"],"sources":["C:/Users/yani/Desktop/projet/projet/src/Provider/UserProvider.js"],"sourcesContent":["export class UserProvider {\r\n    users\r\n    constructor() {\r\n        this.users = this.getUsers()\r\n    }\r\n    //mettre a jour (save) le local storage\r\n    save() {\r\n        localStorage.setItem('spa-users', JSON.stringify(this.users))\r\n    }\r\n\r\n    //récupérer les données du local storage\r\n    load() {\r\n        let datas = localStorage.getItem('spa-users')\r\n        //condition pour retourner un tab vide si on a 0 data\r\n        if (datas === null) datas = '[]'\r\n        //convertir les donnée\r\n        datas = JSON.parse(datas)\r\n        this.users = datas\r\n    }\r\n\r\n    getUsers() {\r\n        this.load()\r\n        return this.users\r\n    }\r\n\r\n    //-----------------------------------//\r\n\r\n    //creer add qui permet d'envoyer les donnée du formulaire \r\n    add(user) {\r\n        //créer un id qui gener la date au moment de la creation **date**\r\n        const id = Date.now()\r\n        //spread\r\n        let tmp = { ...user }\r\n        tmp.id = id\r\n        //push le user dans le local storage\r\n        this.users.push(tmp)\r\n        //enregistrer dans le local grave a la fonction \r\n        this.save()\r\n    }\r\n\r\n    update(user) {\r\n        const { id } = user\r\n        let indice = -1\r\n        for (let i = 0; i < this.users.length; i++)\r\n            if (this.users[i].id === Number(id)) indice = i\r\n\r\n        if (indice === -1) return false\r\n        this.users[indice] = user\r\n        this.save()\r\n        return true\r\n    }\r\n\r\n\r\n    remove(user) {\r\n        let indice = -1\r\n        for (let i = 0; i < this.users.length; i++)\r\n            if (this.users[i].id === Number(id)) indice = i\r\n\r\n        if (indice === -1) return false\r\n        this.users.splice(indice, 1)\r\n        this.save()\r\n        return true\r\n    }\r\n\r\n\r\n    getUsersById(id) {\r\n        let res = this.users.filter(user => user.id === Number(id))\r\n        return res.length === 0 ? false : res[0]\r\n    }\r\n\r\n}\r\n"],"mappings":"AAAA,OAAO,MAAMA,YAAN,CAAmB;EAEtBC,WAAW,GAAG;IACV,KAAKC,KAAL,GAAa,KAAKC,QAAL,EAAb;EACH,CAJqB,CAKtB;;;EACAC,IAAI,GAAG;IACHC,YAAY,CAACC,OAAb,CAAqB,WAArB,EAAkCC,IAAI,CAACC,SAAL,CAAe,KAAKN,KAApB,CAAlC;EACH,CARqB,CAUtB;;;EACAO,IAAI,GAAG;IACH,IAAIC,KAAK,GAAGL,YAAY,CAACM,OAAb,CAAqB,WAArB,CAAZ,CADG,CAEH;;IACA,IAAID,KAAK,KAAK,IAAd,EAAoBA,KAAK,GAAG,IAAR,CAHjB,CAIH;;IACAA,KAAK,GAAGH,IAAI,CAACK,KAAL,CAAWF,KAAX,CAAR;IACA,KAAKR,KAAL,GAAaQ,KAAb;EACH;;EAEDP,QAAQ,GAAG;IACP,KAAKM,IAAL;IACA,OAAO,KAAKP,KAAZ;EACH,CAvBqB,CAyBtB;EAEA;;;EACAW,GAAG,CAACC,IAAD,EAAO;IACN;IACA,MAAMC,EAAE,GAAGC,IAAI,CAACC,GAAL,EAAX,CAFM,CAGN;;IACA,IAAIC,GAAG,GAAG,EAAE,GAAGJ;IAAL,CAAV;IACAI,GAAG,CAACH,EAAJ,GAASA,EAAT,CALM,CAMN;;IACA,KAAKb,KAAL,CAAWiB,IAAX,CAAgBD,GAAhB,EAPM,CAQN;;IACA,KAAKd,IAAL;EACH;;EAEDgB,MAAM,CAACN,IAAD,EAAO;IACT,MAAM;MAAEC;IAAF,IAASD,IAAf;IACA,IAAIO,MAAM,GAAG,CAAC,CAAd;;IACA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKpB,KAAL,CAAWqB,MAA/B,EAAuCD,CAAC,EAAxC,EACI,IAAI,KAAKpB,KAAL,CAAWoB,CAAX,EAAcP,EAAd,KAAqBS,MAAM,CAACT,EAAD,CAA/B,EAAqCM,MAAM,GAAGC,CAAT;;IAEzC,IAAID,MAAM,KAAK,CAAC,CAAhB,EAAmB,OAAO,KAAP;IACnB,KAAKnB,KAAL,CAAWmB,MAAX,IAAqBP,IAArB;IACA,KAAKV,IAAL;IACA,OAAO,IAAP;EACH;;EAGDqB,MAAM,CAACX,IAAD,EAAO;IACT,IAAIO,MAAM,GAAG,CAAC,CAAd;;IACA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKpB,KAAL,CAAWqB,MAA/B,EAAuCD,CAAC,EAAxC,EACI,IAAI,KAAKpB,KAAL,CAAWoB,CAAX,EAAcP,EAAd,KAAqBS,MAAM,CAACT,EAAD,CAA/B,EAAqCM,MAAM,GAAGC,CAAT;;IAEzC,IAAID,MAAM,KAAK,CAAC,CAAhB,EAAmB,OAAO,KAAP;IACnB,KAAKnB,KAAL,CAAWwB,MAAX,CAAkBL,MAAlB,EAA0B,CAA1B;IACA,KAAKjB,IAAL;IACA,OAAO,IAAP;EACH;;EAGDuB,YAAY,CAACZ,EAAD,EAAK;IACb,IAAIa,GAAG,GAAG,KAAK1B,KAAL,CAAW2B,MAAX,CAAkBf,IAAI,IAAIA,IAAI,CAACC,EAAL,KAAYS,MAAM,CAACT,EAAD,CAA5C,CAAV;IACA,OAAOa,GAAG,CAACL,MAAJ,KAAe,CAAf,GAAmB,KAAnB,GAA2BK,GAAG,CAAC,CAAD,CAArC;EACH;;AApEqB"},"metadata":{},"sourceType":"module"}